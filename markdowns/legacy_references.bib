@article{Earley2011,
abstract = {Finding the genes underlying complex traits is difficult. We show that new sequencing technology combined with traditional genetic techniques can efficiently identify genetic regions underlying a complex and quantitative behavioral trait. As a proof of concept we used phenotype-based introgression to backcross loci that control innate food preference in Drosophila simulans into the genomic background of D. sechellia, which expresses the opposite preference. We successfully mapped D. simulans introgression regions in a small mapping population (30 flies) with whole-genome resequencing using light coverage (∼1×). We found six loci contributing to D. simulans food preference, one of which overlaps a previously discovered allele. This approach is applicable to many systems, does not rely on laborious marker development or genotyping, does not require existing high quality reference genomes, and needs only small mapping populations. Because introgression is used, researchers can scale mapping population size, replication, and number of backcross generations to their needs. Finally, in contrast to more widely used mapping techniques like F(2) bulk-segregant analysis, our method produces near-isogenic lines that can be kept and reused indefinitely.},
author = {Earley, Eric J. and Jones, Corbin D.},
doi = {10.1534/genetics.111.129445},
file = {:Users/csoeder/Papers/Next-generation mapping of complex traits with phenotype-based selection and introgression.pdf:pdf},
isbn = {00166731 (ISSN)},
issn = {00166731},
journal = {Genetics},
number = {4},
pages = {1203--1209},
pmid = {21940681},
title = {{Next-generation mapping of complex traits with phenotype-based selection and introgression}},
volume = {189},
year = {2011}
}
@article{Chen2018,
abstract = {Motivation: Quality control and preprocessing of FASTQ files are essential to providing clean data for downstream analysis. Traditionally, a different tool is used for each operation, such as quality control, adapter trimming, and quality filtering. These tools are often insufficiently fast as most are developed using high level programming languages (e.g., Python and Java) and provide limited multithreading support. Reading and loading data multiple times also renders preprocessing slow and I/O inefficient. Results: We developed fastp as an ultra-fast FASTQ preprocessor with useful quality control and data-filtering features. It can perform quality control, adapter trimming, quality filtering, per read quality cutting, and many other operations with a single scan of the FASTQ data. It also supports unique molecular identifier preprocessing, poly tail trimming, output splitting, and base correction for paired-end data. It can automatically detect adapters for single-end and paired-end FASTQ data. This tool is developed in C++ and has multithreading support. Based on our evaluation, fastp is 2 to 5 times faster than other FASTQ preprocessing tools such as Trimmomatic or Cutadapt despite performing far more operations than similar tools. Availability and Implementation: The open-source code and corresponding instructions are available at https://github.com/OpenGene/fastp},
author = {Chen, Shifu and Zhou, Yanqing and Chen, Yaru and Gu, Jia},
doi = {10.1093/bioinformatics/bty560},
file = {:Users/csoeder/Papers/fastp an ultra-fast all-in-one FASTQ preprocessor.pdf:pdf},
isbn = {9788476662106},
issn = {14602059},
journal = {Bioinformatics},
number = {17},
pages = {i884--i890},
pmid = {23766329},
title = {{Fastp: An ultra-fast all-in-one FASTQ preprocessor}},
volume = {34},
year = {2018}
}
@article{Rahmann2017,
   abstract = {Snakemake is a workflow engine that provides a readable Python-based workflow definition language and a powerful execution environment that scales from single-core workstations to compute clusters without modifying the workflow. It is the first system to support the use of automatically inferred multiple named wildcards (or variables) in input and output filenames. © The Author 2012. Published by Oxford University Press. All rights reserved.},
   author = {Johannes Köster and Sven Rahmann},
   doi = {10.1093/bioinformatics/bts480},
   issn = {14602059},
   issue = {19},
   journal = {Bioinformatics},
   month = {10},
   pages = {2520-2522},
   pmid = {22908215},
   title = {Snakemake-a scalable bioinformatics workflow engine},
   volume = {28},
   url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/bts480},
   year = {2012},
}
@article{Gu2016,
    title = {Complex heatmaps reveal patterns and correlations in multidimensional genomic data},
    author = {Zuguang Gu and Roland Eils and Matthias Schlesner},
    journal = {Bioinformatics},
    year = {2016},
  }


